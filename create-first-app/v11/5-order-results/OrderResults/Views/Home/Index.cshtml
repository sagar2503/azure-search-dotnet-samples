@model OrderResults.Models.SearchData
@{
    ViewData["Title"] = "Home Page";
}
<head>
    <link rel="stylesheet" href="~/css/hotels.css?v1.7" />
</head>
<body>

    @using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        <table>
            <tr>
                <td></td>
                <td>
                    <h1 class="sampleTitle">
                        <img src="~/images/AnthemLogo.png" width="80" />
                        @*Sagar - Take it from Config*@
                        @*Hotels Search - Order Results*@
                        Anthem AI Hub - Member Handbook Search
                    </h1>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <!-- Display the search text box, with the search icon to the right of it. -->
                    <div class="searchBoxForm">
                        @Html.TextBoxFor(m => m.searchText, new { @class = "searchBox" }) <input class="searchBoxSubmit" type="submit" value="">
                    </div>

                    @*<div class="searchBoxForm">
                        <b>&nbsp;Order:&nbsp;</b>
                        @Html.RadioButtonFor(m => m.scoring, "Default") Default&nbsp;&nbsp;
                        @Html.RadioButtonFor(m => m.scoring, "RatingRenovation") By numerical Rating&nbsp;&nbsp;
                        @Html.RadioButtonFor(m => m.scoring, "boostEntities") By Amenities&nbsp;&nbsp;
                        @Html.RadioButtonFor(m => m.scoring, "renovatedAndHighlyRated") By Renovated date/Rating profile&nbsp;&nbsp;
                    </div>*@
                </td>
            </tr>

            <tr>
                <td valign="top">
                    <div id="facetplace" class="facetchecks">

                        @if (Model != null && Model.facetText != null)
                        {
                            //Sagar - fetch from config
                            <h5 class="facetheader">Tags:</h5>
                            <ul class="facetlist">
                                @for (var c = 0; c < Model.facetText.Length; c++)
                                {
                                    var facetLink = $"{@Model.facetText[c]} ";
                                    <li> @Html.CheckBoxFor(m => m.facetOn[c], new { @id = "check" + c.ToString() }) @Model.facetText[c] </li>
                                    @*<li>
                                        @Html.ActionLink(facetLink, "FacetAsync", "Home", new { entityFilter = $"Tags/any(t: t eq '{@Model.facetText[c]}')" }, null)
                                    </li>*@
                                }

</ul>
                        }
                    </div>
                </td>
                <td>
                    @if (Model != null && Model.resultList != null)
                    {
                        // Show the total result count.
                        <p class="sampleText">
                            @Model.resultList.TotalCount Results <br />
                        </p>

                        var result = Model.resultList.GetResults().ToList();

                <div id="myDiv" style="width: 800px; height: 450px; overflow-y: scroll;" onscroll="scrolled()">

                    <!-- Show the hotel data. -->
                    @for (var i = 0; i < result.Count; i++)
                    {
                        // result[i].Document.hoc
                        <br />
                        @Html.Label($"FileName{i}", result[i].Document.FileName, new { @class = "box1" })
                        <br />
                        @Html.Raw(@result[i].Document.SearchHighlights?.ToString());
                        //@Html.Label($"HighlitedText{i}", result[i].Document.SearchHighlights.ToString(), new { @class = "box1" })
                        
                        
                        <br />
                        //@Html.Label($"FileName{i}", result[i].Document.Text)
                        foreach (OrderResults.Models.HocrDocument.HocrPages p in result[i].Document.HocrPagesObject)
                        {
                            bool allFilterAvailable = true;
                            if (Model.paramFilter.Count > 0)
                            {
                                foreach (string filterparam in Model.paramFilter)
                                {
                                    if (!p.Text.ToLower().Contains(filterparam.ToLower()))
                                        allFilterAvailable = false;                                   
                                }
                            }
                            if (allFilterAvailable && p.Text.ToLower().Contains(Model.searchText.ToLower()))
                            {
                                <br />
                                @Html.Label($"PageNumber", p.PageNumber.ToString(), new { @class = "box2" })
                                <br />
                                @Html.Label($"Text", p.Text, new { @class = "box3" })
                                <br />
                                <img src=@p.PageImageUrl
                                     class="rounded-circle"
                                     height="200" width="200" />
                                <br />
                            }
                        }


                    }

                </div>

                        <script>
                            function scrolled() {
                                if (myDiv.offsetHeight + myDiv.scrollTop >= myDiv.scrollHeight) {
                                    $.getJSON("/Home/NextAsync", function (data) {
                                        var div = document.getElementById('myDiv');

                                        // Append the returned data to the current list of hotels.
                                        for (var i = 0; i < data.length; i += 5) {
                                            div.innerHTML += '\n<textarea class="box1A">' + data[i] + '</textarea>';
                                            div.innerHTML += '\n<textarea class="box1B">' +  data[i + 1] + '</textarea>';
                                            div.innerHTML += '\n<image class="box2A">' + data[i + 2] + '</image>';
                                            div.innerHTML += '\n<textarea class="box2B">' + data[i + 3] + '</textarea>';
                                            //div.innerHTML += '\n<textarea class="box3">' + data[i + 4] + '</textarea>';
                                        }
                                    });
                                }
                            }
                        </script>
                    }
                </td>
            </tr>
        </table>
    }
</body>
